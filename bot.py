from aiogram import *
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.contrib.fsm_storage.memory import MemoryStorage

API = '5741501602:AAHLLnuEMVc3HuNOpVeZQAnL0nWGWsYhqMc'

bot = Bot(API)
Tbot = Dispatcher(bot, storage=MemoryStorage())

d = 0
p = 0
k = 0

class States(StatesGroup):
	kv_in_p = State()

@Tbot.message_handler(commands=['start'])
async def start(msg):
	global d
	global p
	global k
	d = 0
	p = 0
	k = 0

	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
	nd = types.KeyboardButton('–ù–∞—á–∞—Ç—å –¥–µ–Ω—å')
	keyboard.add(nd)

	await msg.answer('üëã')
	await msg.answer(f'–ü—Ä–∏–≤–µ—Ç {msg.from_user.first_name}, —è –ü–æ—á—Ç–∞-–±–æ—Ç!\n\n–Ø –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ —Å—á–∏—Ç–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –¥–æ–º–æ–≤, –ø–æ–¥—ä–µ–∑–¥–æ–≤ –∏ –∫–≤–∞—Ä—Ç–∏—Ä —Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª!\n\n–í–ø–µ—Ä—ë–¥ —Ä–∞–±–æ—Ç–∞—Ç—å!', reply_markup=keyboard)

@Tbot.message_handler()
async def msgs(msg: types.Message):
	global d
	global p
	global k
	if msg.text == '–ù–∞—á–∞—Ç—å –¥–µ–Ω—å':
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
		zd = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–º')
		zp = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥—ä–µ–∑–¥')
		stats = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
		zday = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å')
		keyboard.add(zd, zp, stats, zday)
		await msg.answer('üëã')
		await msg.answer('–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! –í–ø–µ—Ä—ë–¥ —Ä–∞–±–æ—Ç–∞—Ç—å, –∏ —É–¥–∞—á–∏!', reply_markup=keyboard)
	elif msg.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–º':
		d += 1
		await msg.answer(f'üè†–°—É–ø–µ—Ä, –¥–æ–º –∑–∞–≤–µ—Ä—à—ë–Ω!')
	elif msg.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥—ä–µ–∑–¥':
		p += 1
		await msg.answer('üö™–û—Ç–ª–∏—á–Ω–æ, –ø–æ–¥—ä–µ–∑–¥ –∑–∞–≤–µ—Ä—à—ë–Ω! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏, —Å–∫–æ–ª—å–∫–æ –±—ã–ª–æ –∫–≤–∞—Ä—Ç–∏—Ä –≤ —ç—Ç–æ–º –ø–æ–¥—ä–µ–∑–¥–µ (–ø—Ä–∏–º–µ—Ä: 46-84)', reply_markup=types.ReplyKeyboardRemove())
		await	States.kv_in_p.set()
	elif msg.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
		await msg.answer(f'üìà–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n–î–æ–º–∞: {d}\n–ü–æ–¥—ä–µ–∑–¥—ã: {p}\n–ö–≤–∞—Ä—Ç–∏—Ä—ã: {k}')
	elif msg.text == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å':
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
		nd = types.KeyboardButton('–ù–∞—á–∞—Ç—å –¥–µ–Ω—å')
		keyboard.add(nd)
		await msg.answer(f'‚úÖ–î–µ–Ω—å –∑–∞–∫–æ–Ω—á–µ–Ω!\n\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å:\n\n–î–æ–º–∞: {d}\n–ü–æ–¥—ä–µ–∑–¥—ã: {p}\n–ö–≤–∞—Ä—Ç–∏—Ä—ã: {k}', reply_markup=keyboard)
		d = 0
		p = 0
		k = 0

@Tbot.message_handler(state=States.kv_in_p)
async def kvs(msg: types.Message):
	keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
	zd = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–æ–º')
	zp = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–æ–¥—ä–µ–∑–¥')
	stats = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
	zday = types.KeyboardButton('–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å')
	keyboard.add(zd, zp, stats, zday)

	global k
	kvartiry = msg.text.split(sep='-')
	await msg.answer(f'–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –í —ç—Ç–æ–º –ø–æ–¥—ä–µ–∑–¥–µ –±—ã–ª–æ {int(kvartiry[1]) - int(kvartiry[0]) + 1} –∫–≤–∞—Ä—Ç–∏—Ä', reply_markup=keyboard)
	k += int(kvartiry[1]) - int(kvartiry[0]) + 1
	await States.previous()

if __name__ == '__main__':
	executor.start_polling(Tbot)